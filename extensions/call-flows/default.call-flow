;; -*- mode: common-lisp -*-

(call-flow-definition
    :default (:enabled t)

  (flow actor-initialization-flow
        (flow-state ENTRY :reset ()
                    (selector
                     (lambda (core-state)
                       (actor-initialize-db core-state)))

                    ;; This function is run for every instance
                    (action
                     (lambda (core-state inst)
                       ;; a core function, not exposed to users.
                       (realize-actor inst (context core-state))))

                    ;; After all instances have been processed, this
                    ;; function is run once by the executor in order to
                    ;; choose the next state. The let form contains
                    ;; anything we need to store while running the
                    ;; instance function which may determine the state
                    ;; we go to.
                    (transition
                     (lambda (core-state)
                       (declare (ignorable core-state))
                       EXIT/FLOW-FINISHED)))

        (flow-state EXIT/FLOW-FINISHED :reset ()
                    (selector NIL)
                    (action NIL)
                    (transition NIL)))

  (flow frame-flow
        (flow-state ENTRY :reset ()
                    (selector NIL)

                    (action
                     (lambda (core-state inst)
                       (declare (ignore inst))
                       (execute-flow core-state
                                     :default
                                     'actor-initialization-flow
                                     'ENTRY)))

                    (transition
                     (lambda (core-state)
                       (declare (ignorable core-state))
                       EXIT/DO-NEXT-FRAME)))

        (flow-state EXIT/DO-NEXT-FRAME :reset ()
                    (selector NIL)
                    (action NIL)
                    (transition NIL))

        (flow-state EXIT/GAME-OVER :reset ()
                    (selector NIL)
                    (action NIL)
                    (transition NIL))))
