;; -*- mode: common-lisp -*-

(call-flow-definition
    :default (:enabled t)

  (flow realize-phase
        (flow-state ENTRY/REALIZE-COMPONENTS :reset ()
                    (selector
                     (lambda (core-state)
                       ;; this will iterate over a hash, and the
                       ;; action will work on the values, which are
                       ;; hashes themselves.
                       (component-initialize-by-type-view core-state)))

                    (action
                     (lambda (core-state component-ht)
                       ;; realize all components in the component-ht.
                       (realize-components core-state component-ht)))

                    (transition
                     (lambda (core-state)
                       (declare (ignorable core-state))
                       REALIZE-ACTORS)))

        (flow-state REALIZE-ACTORS :reset ()
                    (selector
                     (lambda (core-state)
                       (actor-initialize-db core-state)))

                    (action
                     (lambda (core-state inst)
                       (realize-actor core-state inst)))

                    (transition
                     (lambda (core-state)
                       (declare (ignorable core-state))
                       REALIZE-PHASE-COMMIT)))


        (flow-state REALIZE-PHASE-COMMIT :reset ()
                    (selector
                     (lambda (core-state)
                       core-state))

                    (action
                     (lambda (core-state inst)
                       (declare (ignore inst))
                       (realize-phase-commit core-state)))

                    (transition
                     (lambda (core-state)
                       (declare (ignorable core-state))
                       PROTOCOL-INITIALIZE-COMPONENTS)))

        (flow-state PROTOCOL-INITIALIZE-COMPONENTS :reset ()
                    (selector
                     (lambda (core-state)
                       (component-active-view core-state)))

                    (action
                     (lambda (core-state component)
                       (initialize-component component (context core-state))))

                    (transition
                     (lambda (core-state)
                       (declare (ignorable core-state))
                       EXIT/REALIZE-PHASE)))

        (flow-state EXIT/REALIZE-PHASE :reset ()
                    (selector NIL)
                    (action NIL)
                    (transition NIL)))

  (flow perform-one-frame
        (flow-state ENTRY :reset ()
                    (selector
                     (lambda (core-state)
                       core-state))

                    (action
                     (lambda (core-state inst)
                       (declare (ignore inst))
                       (execute-flow core-state
                                     :default
                                     'realize-phase
                                     'ENTRY/REALIZE-COMPONENTS
                                     :come-from-state-name
                                     (gensym "EF-REALIZE-PHASE-"))))

                    (transition
                     (lambda (core-state)
                       (declare (ignorable core-state))
                       EXIT/DO-NEXT-FRAME)))

        (flow-state EXIT/DO-NEXT-FRAME :reset ()
                    (selector NIL)
                    (action NIL)
                    (transition NIL))

        (flow-state EXIT/GAME-OVER :reset ()
                    (selector NIL)
                    (action NIL)
                    (transition NIL))))
