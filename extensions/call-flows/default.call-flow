;; -*- mode: common-lisp -*-

(call-flow-definition
    :default (:enabled t)

  (flow actor-initialization-flow
        (flow-state ENTRY/INIT-COMPONENTS :reset ()
                    (selector
                     (lambda (core-state)
                       (component-initialize-view core-state)))

                    (action
                     (lambda (core-state inst)
                       (realize-component inst (context core-state))))

                    (transition
                     (lambda (core-state)
                       (declare (ignorable core-state))
                       INIT-ACTORS)))


        (flow-state INIT-ACTORS :reset ()
                    (selector
                     (lambda (core-state)
                       (actor-initialize-db core-state)))

                    (action
                     (lambda (core-state inst)
                       (realize-actor inst (context core-state))))

                    (transition
                     (lambda (core-state)
                       (declare (ignorable core-state))
                       EXIT/FLOW-FINISHED)))

        (flow-state EXIT/FLOW-FINISHED :reset ()
                    (selector NIL)
                    (action NIL)
                    (transition NIL)))

  (flow frame-flow
        (flow-state ENTRY :reset ()
                    (selector NIL)

                    (action
                     (lambda (core-state inst)
                       (declare (ignore inst))
                       (execute-flow core-state
                                     :default
                                     'actor-initialization-flow
                                     'INIT-COMPONENTS)))

                    (transition
                     (lambda (core-state)
                       (declare (ignorable core-state))
                       EXIT/DO-NEXT-FRAME)))

        (flow-state EXIT/DO-NEXT-FRAME :reset ()
                    (selector NIL)
                    (action NIL)
                    (transition NIL))

        (flow-state EXIT/GAME-OVER :reset ()
                    (selector NIL)
                    (action NIL)
                    (transition NIL))))
