;; -*- mode: common-lisp -*-
(in-package :fl.materials)

(define-material unlit-color
    (:enabled t
     :shader 'fl.shaders:unlit-color)

  ;; No uniform data for this shader.

  )

(define-material unlit-color-decal
    (:enabled t
     :shader 'fl.shaders:unlit-color-decal)

  ;; No uniform data for this shader.

  )

(define-material unlit-texture
    (:enabled t
     :shader 'fl.shaders:unlit-texture)

  ;; Uniform data.
  ;;
  ;; Any :sampler-2d types will ultimately be converted into the right
  ;; thing when this material is used.
  (uniforms
   (:tex.sampler1 "data/texture/debug.png")))

(define-material unlit-texture-decal
    (:enabled t
     :shader 'fl.shaders:unlit-texture-decal)

  ;; Uniform data.
  ;;
  ;; Any :sampler-2d types will ultimately be converted into the right
  ;; thing when this material is used.
  (uniforms
   (:tex.sampler1 "data/texture/debug.png")))


;; NOTE: If there is a problem looking up a material, this is what a material
;; will become to indicate there is a problem.
(define-material missing-material
    (:enabled t
     :shader 'fl.shaders:unlit-texture)

  (uniforms
   (:tex.sampler1 "data/texture/missing-material.png")))

(define-material pbr-damaged-helmet
    (:enabled t
     :shader 'fl.shaders:pbr-damaged-helmet)

  (uniforms
   ;; metallic first, roughness second
   (:metallic-roughness-values (v2:make 1.0 1.0))
   (:metallic-roughness-sampler "data/texture/Default_metalRoughness.png")
   (:base-color-sampler "data/texture/Default_albedo.png")
   (:base-color-factor (v4:make 1.0 1.0 1.0 1.0))
   (:normal-sampler "data/texture/Default_normal.png")
   (:normal-scale 1.0)
   ;; NOTE: This vector points TOWARDS the light.
   (:light-direction (v3:make 0.0 1.0 1.0))
   (:light-color (v3:make 1.0 1.0 1.0))
   (:occlusion-sampler "data/texture/Default_AO.png")
   (:occlusion-strength 1.0)
   (:emissive-sampler "data/texture/Default_emissive.png")
   (:emissive-factor .3)
   )

  )
