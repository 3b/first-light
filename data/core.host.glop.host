;; -*- mode: common-lisp -*-

(in-package :fl.host)

(handler-bind ((warning #'muffle-warning))
  (asdf:load-system :glop))

(defmethod initialize-host ((host (eql :glop)) &key)
  (values))

(defmethod shutdown-host ((host (eql :glop)))
  (values))

(defmethod create-window ((host (eql :glop)) title width height &key)
  (glop:create-window title width height))

(defmethod create-opengl-context ((host (eql :glop)) window major-version minor-version)
  (glop:create-gl-context window
                          :profile :core
                          :major major-version
                          :minor minor-version
                          :make-current t))

(defmethod close-window ((host (eql :glop)) window)
  (glop:close-window window))

(defmethod get-refresh-rate ((host (eql :glop)))
  (warn "Getting the display refresh rate is unsupported with the glop host; falling back to 60.")
  60)

(defmethod redraw-window ((host (eql :glop)) window)
  (glop:swap-buffers window))

(defmethod set-draw-mode ((host (eql :glop)) mode)
  (warn "Setting the draw mode is unsupported with the glop host; falling back to system default.")
  (values))

(defmethod on-event ((host (eql :glop)) event core-state)
  (declare (ignore core-state))
  (typecase event
    (glop:key-press-event
     (format t "~s~%" (glop:keycode event)))))

;;; TODO: Why is this blocking?
(defmethod handle-events ((host (eql :glop)) core-state)
  (loop :with window = (fl.core:window (fl.core:display core-state))
        :for event = (glop:next-event window :blocking nil)
        :when event
          :do (on-event host event core-state)))
